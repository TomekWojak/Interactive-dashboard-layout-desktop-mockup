document.addEventListener("DOMContentLoaded",function(){function e(t){t.preventDefault(),c.forEach(function(t){return t.classList.remove("active")}),t.target.classList.add("active")}var t,n,r,o=document.querySelector(".statistics__chart"),s=document.querySelector(".report__btn"),c=document.querySelectorAll(".nav__link"),a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];t=[document.querySelector(".progress-ring__progress"),document.querySelector(".progress-ring__progress-bg")],n=(parseFloat(document.querySelector(".progress-ring tspan:first-of-type").textContent.replace(",",".").slice(1,-1))/parseFloat(document.querySelector(".progress-ring tspan:last-of-type").textContent.replace(",",".").slice(3,-1))).toFixed(5),r=Math.floor(314*(1-n)),setTimeout(function(){t.forEach(function(t){t.style.strokeDashoffset=r,t.style.strokeWidth=6})},100);for(var i=0;i<a.length;i++){var l=document.createElement("div"),u=document.createElement("div"),d=document.createElement("span");l.classList.add("statistics__box"),d.classList.add("statistics__month"),u.classList.add("statistics__column"),d.textContent=a[i],l.append(u),l.append(d),o.append(l)}var p=Array.from(document.getElementsByClassName("statistics__column"));p&&setTimeout(function(){p.forEach(function(t){var e=Math.floor(80*Math.random()+20);t.style.height=e+"px"})},100),c.forEach(function(t){return t.addEventListener("click",e)}),s.addEventListener("click",function(t){var e=document.createElement("span"),n=(e.classList.add("circle"),t.target.getBoundingClientRect()),r=t.clientY-n.top+"px",n=t.clientX-n.left+"px";e.style.top=r,e.style.left=n,t.target.append(e),setTimeout(function(){e.remove()},300)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlYXJuaW5nc1BlcmNlbnRhZ2UiLCJoYW5kbGVOYXZMaW5rcyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImxpbmtzIiwic2V0VGltZW91dCIsImxpbmsiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ0YXJnZXQiLCJhZGQiLCJyaW5nIiwicmluZ3MiLCJjcmVhdGVDb2x1bW5zIiwiZmluYWxPZmZzZXQiLCJjaGFydCIsInF1ZXJ5U2VsZWN0b3IiLCJyZXBvcnRCdG4iLCJ0ZXh0Q29udGVudCIsImNsaWVudFkiLCJ0b3AiLCJzbGljZSIsImxlZnQiLCJ0b0ZpeGVkIiwiTWF0aCIsIm1vbnRocyIsInBhcnNlRmxvYXQiLCJjb2x1bW4iLCJmb3JFYWNoIiwibW9udGhOYW1lIiwic3R5bGUiLCJzdHJva2VXaWR0aCIsImkiLCJsZW5ndGgiLCJib3giLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kIiwiYWxsQ29sdW1ucyIsIkFycmF5IiwiZnJvbSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJjb2xIZWlnaHQiLCJmbG9vciIsInJhbmRvbSIsImhlaWdodCIsImNpcmNsZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJlY3QiXSwibWFwcGluZ3MiOiJBQUFBQSxTQUFTQyxpQkFBaUIsbUJBQW9CLFdBeUN0Q0MsU0FBTkMsRUFBTUQsR0FyQk5FLEVBc0JBQyxlQUFpQixFQXJCakJDLEVBdUJBQyxRQUFXLFNBQUFDLEdBQUEsT0FBQUEsRUFBTUMsVUFBQUMsT0FBQSxRQUFBLENBQUEsQ0FBQSxFQXRCakJOLEVBQUVPLE9BdUJJRixVQUFTRyxJQUFBLFFBQUNDLENBdEJqQixDQXRCQSxJQStDSUMsRUFzQkVDLEVBQ0xDLEVBdEVLQyxFQUFRakIsU0FBU2tCLGNBQWMsb0JBQW9CLEVBRDFEbEIsRUFBU0MsU0FBaUJpQixjQUFBLGNBQW9CLEVBQ3ZDRCxFQUFRakIsU0FBU2tCLGlCQUFjLFlBQUEsRUFDL0JDLEVBQVMsQ0FDZixNQUNBLE1BY0EsTUFDQSxNQVZDLE1BQ0EsTUFDQSxNQUNBLE1BQ0EsTUFVRCxNQUNBLE1BUkMsT0FnQ0dMLEVBQUEsQ0F0QkZkLFNBdUJNa0IsY0FBQSwwQkFBQSxFQUNQbEIsU0FBQWtCLGNBQUEsNkJBQUEsR0FvQktILEdBbEJVZixXQXRCZEEsU0F5QkRrQixjQUFlUCxvQ0FBOEIsRUFFN0NTLFlBQWNDLFFBQU8sSUFBTyxHQUFDQyxFQUM3QkMsTUFBTUMsRUFBSSxDQUFHcEIsQ0FBQyxDQXhCZCxFQTJCYW9CLFdBekJaeEIsU0E2QkRPLGNBQVcsbUNBQU0sRUEzQmRhLFlBNEJLVixRQUFRLElBQUEsR0FBQSxFQUNmYSxNQUFNLEVBQUEsQ0FBQSxDQUFBLENBQ1IsR0FFNEJFLFFBQUEsQ0FBQSxFQUMzQlQsRUFBaUJVLEtBQUdDLE1BcENKQyxLQW9Dd0IsRUFBQTFCLEVBQUEsRUEzQnhDSyxXQTZCT3NCLFdBNUJOZixFQTZCQWdCLFFBQU1DLFNBQUFBLEdBNUJMbEIsRUE2QkVtQixNQUFDdkIsaUJBQWNPLEVBNUJqQkgsRUE2QkRrQixNQUFTRSxZQUFjLENBNUJ2QixDQUFDLENBQ0YsRUFBRyxHQThCRkYsRUFSRCxJQUFLLElBQUlHLEVBQUksRUFBR0EsRUFBSVAsRUFBT1EsT0FBUUQsQ0FBQyxHQUFJLENBQ3ZDLElBQU1FLEVBQU1wQyxTQUFTcUMsY0FBYyxLQUFLLEVBQ2xDUixFQUFTN0IsU0FBU3FDLGNBQWMsS0FBSyxFQUNyQ04sRUFBWS9CLFNBQVNxQyxjQUFjLE1BQU0sRUFDL0NELEVBQUkzQixVQUFVRyxJQUFJLGlCQUFpQixFQUNuQ21CLEVBQVV0QixVQUFVRyxJQUFJLG1CQUFtQixFQUMzQ2lCLEVBQU9wQixVQUFVRyxJQUFJLG9CQUFvQixFQUV6Q21CLEVBQVVYLFlBQWNPLEVBQU9PLEdBRS9CRSxFQUFJRSxPQUFPVCxDQUFNLEVBQ2pCTyxFQUFJRSxPQUFPUCxDQUFTLEVBQ3BCZCxFQUFNcUIsT0FBT0YsQ0FBRyxDQUNqQixDQUNBLElBQU1HLEVBQWFDLE1BQU1DLEtBQ3hCekMsU0FBUzBDLHVCQUF1QixvQkFBb0IsQ0FDckQsRUFFSUgsR0FDSGhDLFdBQVcsV0FDVmdDLEVBQVdULFFBQVEsU0FBQ0QsR0FDbkIsSUFBTWMsRUFBWWpCLEtBQUtrQixNQUFzQixHQUFoQmxCLEtBQUttQixPQUFPLEVBQVMsRUFBRSxFQUNwRGhCLEVBQU9HLE1BQU1jLE9BQVNILEVBQVksSUFDbkMsQ0FBQyxDQUNGLEVBQUcsR0FBRyxFQU1SckMsRUFBTXdCLFFBQVEsU0FBQ3RCLEdBQUksT0FBS0EsRUFBS1AsaUJBQWlCLFFBQVNFLENBQWMsQ0FBQyxDQUFBLEVBQ3RFZ0IsRUFBVWxCLGlCQUFpQixRQXBCSixTQUFBRyxHQTlCdEIsSUErQkNhLEVBQU1xQixTQUFXRCxjQUFBLE1BQUEsRUFNZEUsR0FwQ0pRLEVBK0JBdEMsVUFBQUcsSUFBQSxRQUFBLEVBS0kyQixFQUFBQSxPQUFZUyxzQkFBQSxHQUVkVCxFQUFBQSxFQUFBQSxRQUFrQlUsRUFBQzNCLElBQUNPLEtBakNoQkwsRUFrQ0dtQixFQUFBQSxRQUFZakIsRUFBS2tCLEtBQU1sQixLQWhDaENxQixFQWtDR2YsTUFBQ1YsSUFBQUEsRUFqQ0p5QixFQWtDSWYsTUFBSVIsS0FBQUEsRUFFVHBCLEVBQUNPLE9BQUEyQixPQUFBUyxDQUFBLEVBR0RoQyxXQUFBQSxXQUNBVCxFQUFNd0IsT0FBUSxDQWxDYixFQWtDa0IsR0FBQSxDQWpDbkIsQ0FrQ3FELENBQ3RELENBQUMiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuXHRjb25zdCBjaGFydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhdGlzdGljc19fY2hhcnRcIik7XHJcblx0Y29uc3QgcmVwb3J0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXBvcnRfX2J0blwiKTtcclxuXHRjb25zdCBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2X19saW5rXCIpO1xyXG5cdGNvbnN0IG1vbnRocyA9IFtcclxuXHRcdFwiSmFuXCIsXHJcblx0XHRcIkZlYlwiLFxyXG5cdFx0XCJNYXJcIixcclxuXHRcdFwiQXByXCIsXHJcblx0XHRcIk1heVwiLFxyXG5cdFx0XCJKdW5cIixcclxuXHRcdFwiSnVsXCIsXHJcblx0XHRcIkF1Z1wiLFxyXG5cdFx0XCJTZXBcIixcclxuXHRcdFwiT2N0XCIsXHJcblx0XHRcIk5vdlwiLFxyXG5cdFx0XCJEZWNcIixcclxuXHRdO1xyXG5cdGNvbnN0IENJUkNMRV9EQVNIQVJSID0gMzE0O1xyXG5cdGNvbnN0IGhhbmRsZU5hdkxpbmtzID0gKGUpID0+IHtcclxuXHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdGxpbmtzLmZvckVhY2goKGxpbmspID0+IGxpbmsuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSk7XHJcblx0XHRlLnRhcmdldC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG5cdH07XHJcblx0Y29uc3QgaGFuZGxlUmluZ1N0YXRzID0gKCkgPT4ge1xyXG5cdFx0Y29uc3QgcmluZ3MgPSBbXHJcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZ3Jlc3MtcmluZ19fcHJvZ3Jlc3NcIiksXHJcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZ3Jlc3MtcmluZ19fcHJvZ3Jlc3MtYmdcIiksXHJcblx0XHRdO1xyXG5cdFx0Y29uc3QgZWFybmluZ3MgPSBwYXJzZUZsb2F0KFxyXG5cdFx0XHRkb2N1bWVudFxyXG5cdFx0XHRcdC5xdWVyeVNlbGVjdG9yKFwiLnByb2dyZXNzLXJpbmcgdHNwYW46Zmlyc3Qtb2YtdHlwZVwiKVxyXG5cdFx0XHRcdC50ZXh0Q29udGVudC5yZXBsYWNlKFwiLFwiLCBcIi5cIilcclxuXHRcdFx0XHQuc2xpY2UoMSwgLTEpXHJcblx0XHQpO1xyXG5cdFx0Y29uc3QgZGVzdGlueSA9IHBhcnNlRmxvYXQoXHJcblx0XHRcdGRvY3VtZW50XHJcblx0XHRcdFx0LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZ3Jlc3MtcmluZyB0c3BhbjpsYXN0LW9mLXR5cGVcIilcclxuXHRcdFx0XHQudGV4dENvbnRlbnQucmVwbGFjZShcIixcIiwgXCIuXCIpXHJcblx0XHRcdFx0LnNsaWNlKDMsIC0xKVxyXG5cdFx0KTtcclxuXHRcdGNvbnN0IGVhcm5pbmdzUGVyY2VudGFnZSA9IChlYXJuaW5ncyAvIGRlc3RpbnkpLnRvRml4ZWQoNSk7XHJcblx0XHRjb25zdCBmaW5hbE9mZnNldCA9IE1hdGguZmxvb3IoQ0lSQ0xFX0RBU0hBUlIgKiAoMSAtIGVhcm5pbmdzUGVyY2VudGFnZSkpO1xyXG5cclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRyaW5ncy5mb3JFYWNoKChyaW5nKSA9PiB7XHJcblx0XHRcdFx0cmluZy5zdHlsZS5zdHJva2VEYXNob2Zmc2V0ID0gZmluYWxPZmZzZXQ7XHJcblx0XHRcdFx0cmluZy5zdHlsZS5zdHJva2VXaWR0aCA9IDY7XHJcblx0XHRcdH0pO1xyXG5cdFx0fSwgMTAwKTtcclxuXHR9O1xyXG5cdGNvbnN0IGJ0bkNsaWNrQW5pbWF0aW9uID0gKGUpID0+IHtcclxuXHRcdGNvbnN0IGNpcmNsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG5cdFx0Y2lyY2xlLmNsYXNzTGlzdC5hZGQoXCJjaXJjbGVcIik7XHJcblxyXG5cdFx0Y29uc3QgcmVjdCA9IGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuXHRcdGNvbnN0IHRvcCA9IGUuY2xpZW50WSAtIHJlY3QudG9wICsgXCJweFwiO1xyXG5cdFx0Y29uc3QgbGVmdCA9IGUuY2xpZW50WCAtIHJlY3QubGVmdCArIFwicHhcIjtcclxuXHJcblx0XHRjaXJjbGUuc3R5bGUudG9wID0gdG9wO1xyXG5cdFx0Y2lyY2xlLnN0eWxlLmxlZnQgPSBsZWZ0O1xyXG5cclxuXHRcdGUudGFyZ2V0LmFwcGVuZChjaXJjbGUpO1xyXG5cclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRjaXJjbGUucmVtb3ZlKCk7XHJcblx0XHR9LCAzMDApO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IGNyZWF0ZUNvbHVtbnMgPSAoKSA9PiB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IG1vbnRocy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRjb25zdCBib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHRjb25zdCBjb2x1bW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHRjb25zdCBtb250aE5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuXHRcdFx0Ym94LmNsYXNzTGlzdC5hZGQoXCJzdGF0aXN0aWNzX19ib3hcIik7XHJcblx0XHRcdG1vbnRoTmFtZS5jbGFzc0xpc3QuYWRkKFwic3RhdGlzdGljc19fbW9udGhcIik7XHJcblx0XHRcdGNvbHVtbi5jbGFzc0xpc3QuYWRkKFwic3RhdGlzdGljc19fY29sdW1uXCIpO1xyXG5cclxuXHRcdFx0bW9udGhOYW1lLnRleHRDb250ZW50ID0gbW9udGhzW2ldO1xyXG5cclxuXHRcdFx0Ym94LmFwcGVuZChjb2x1bW4pO1xyXG5cdFx0XHRib3guYXBwZW5kKG1vbnRoTmFtZSk7XHJcblx0XHRcdGNoYXJ0LmFwcGVuZChib3gpO1xyXG5cdFx0fVxyXG5cdFx0Y29uc3QgYWxsQ29sdW1ucyA9IEFycmF5LmZyb20oXHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzdGF0aXN0aWNzX19jb2x1bW5cIilcclxuXHRcdCk7XHJcblxyXG5cdFx0aWYgKGFsbENvbHVtbnMpIHtcclxuXHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0YWxsQ29sdW1ucy5mb3JFYWNoKChjb2x1bW4pID0+IHtcclxuXHRcdFx0XHRcdGNvbnN0IGNvbEhlaWdodCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDgwICsgMjApO1xyXG5cdFx0XHRcdFx0Y29sdW1uLnN0eWxlLmhlaWdodCA9IGNvbEhlaWdodCArIFwicHhcIjtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSwgMTAwKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRoYW5kbGVSaW5nU3RhdHMoKTtcclxuXHRjcmVhdGVDb2x1bW5zKCk7XHJcblx0bGlua3MuZm9yRWFjaCgobGluaykgPT4gbGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlTmF2TGlua3MpKTtcclxuXHRyZXBvcnRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGJ0bkNsaWNrQW5pbWF0aW9uKTtcclxufSk7XHJcbiJdfQ==

function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(t,e){var n,o=Object.keys(t);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(t),e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),o.push.apply(o,n)),o}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach(function(e){_defineProperty(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!=_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}function _createForOfIteratorHelper(e,t){var n,o,r,a,s="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(s)return r=!(o=!0),{s:function(){s=s.call(e)},n:function(){var e=s.next();return o=e.done,e},e:function(e){r=!0,n=e},f:function(){try{o||null==s.return||s.return()}finally{if(r)throw n}}};if(Array.isArray(e)||(s=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return s&&(e=s),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n={}.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}document.addEventListener("DOMContentLoaded",function(){function t(e){e.preventDefault(),o.forEach(function(e){return e.classList.remove("active")}),e.target.classList.add("active")}function M(){l.classList.add("active")}function J(){y.value="",f.forEach(function(e){return e.classList.toggle("btn-moved")}),y.classList.toggle("active")}function N(){u.classList.add("active"),d.classList.remove("visible")}function n(e){e.classList.add("hidden"),e.classList.remove("active"),setTimeout(function(){e.classList.remove("hidden")},300)}function F(){p.classList.add("active")}var s=document.querySelector(".statistics__chart"),K=document.querySelector(".report__btn"),o=document.querySelectorAll(".nav__link"),r=document.querySelector(".dashboard"),i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],a=[{message:"Welcome to your dashboard!",time:"1 hour ago",from:"System"},{message:"You have 2 new messages",time:"1 hour ago",from:"Nick J."},{message:"Your report is ready to download",time:"2 hours ago",from:"System"},{message:"First steps in the Dashboard",time:"3 hours ago",from:"Jerry from Dashboard"},{message:"Update: Dashboard v2.1",time:"4 hours ago",from:"System"},{message:"New payment: +$1,200 PayPal",time:"4 hour ago",from:"System"},{message:"The transfer has been completed",time:"4 hours ago",from:"John D"},{message:"Reminder: Rebalance portfolio",time:"5 hours ago",from:"System"},{message:"New: Analytics in PRO!",time:"6 hour ago",from:"Daniel from Dashboard"},{message:"Contact details confirmation",time:"8 hour ago",from:"Support Team"}],e=4e3,c=314,u=document.querySelector(".notifications-box"),B=document.querySelector(".header__panel"),H=document.querySelector(".notifications-box__close"),l=document.querySelector(".tasks"),d=document.querySelector(".dot"),m=document.querySelector(".notifications-box"),R=document.querySelector(".header__btn--bell"),f=[document.querySelector(".header__btn--search-engine"),document.querySelector(".header__pro-subscribtion-btn")],p=document.querySelector(".user-panel"),y=document.querySelector(".header__input"),v=document.querySelector(".login-page"),g=document.querySelectorAll(".login-page__input"),W=document.querySelector(".login-page__pass-forgotten"),_=document.querySelector(".login-page__login-btn"),b=document.querySelector(".error-info"),h=document.querySelector(".login-page__input--username"),S=document.querySelector(".login-page__input--password"),L=document.querySelector(".login-data"),q=document.querySelector(".loading-box"),x=document.querySelector(".popup-settings"),Y=(document.querySelector(".popup-username__input"),document.querySelector(".popup-country__select")),$=(document.querySelector(".popup-settings__btn"),"../countries.json"),U=function(){fetch($).then(function(e){return e.json().then(function(e){var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){country=t.value;var o=document.createElement("option");o.value=country.name,o.innerText=country.name,Y.append(o)}}catch(e){n.e(e)}finally{n.f()}})})},E=function(){A().popupSeen||setTimeout(function(){x.classList.add("active");var e=document.querySelector(".popup-settings__btn");U(),e&&e.addEventListener("click",X)},4e3)},X=function(){I({popupSeen:!0}),Z(),x.classList.remove("active")},Z=function(){var e=document.querySelector(".popup-username__input"),t=document.querySelector(".popup-country__select"),n=x.querySelector(".error-txt"),t=t.options[t.selectedIndex].value;e.value.trim()&&0!=t?(n.classList.remove("error"),n.textContent="",z(n,e,t)):(n.textContent="Complete all fields",n.classList.add("error"))},z=function(e,t,n){e.classList.contains("error")||(I({username:t.value,location:n}),P())};function G(){g.forEach(function(e){(e.value.trim()?(b.textContent="",C(e),ce):(b.textContent="Complete all fields",O))(e)})}function Q(){var e=Array.from(g).some(function(e){return e.classList.contains("error")});T||e||(T=!0,ue(),setTimeout(function(){T=!1},1e3))}function V(){I({loggedIn:!1}),q.classList.add("active"),setTimeout(function(){r.classList.remove("logged-in"),v.classList.add("visible"),q.classList.remove("active")},e)}function k(e){var t=document.createElement("span"),n=(t.classList.add("circle"),e.target.getBoundingClientRect()),o=e.clientY-n.top+"px",n=e.clientX-n.left+"px";t.style.top=o,t.style.left=n,e.target.append(t),setTimeout(function(){t.remove()},300)}function ee(){var e,t,n,o=A();o&&o.username&&(t=(e=document.querySelector(".aside")).querySelector(".aside__user-name"),n=p.querySelector(".id"),t.textContent=o.username,n.textContent=o.username,o.location)&&(e.querySelector(".aside__user-location").textContent=o.location)}var w,te=function(e){var t=e.querySelector(".tasks__target"),n=parseInt(t.textContent.slice(4)),o=e.querySelector(".tasks__progress-bar"),t=(ne(e,t,n),parseInt(e.dataset.number));o.style.width=100/n*t+"%"},ne=function(e,t,n){var o=parseInt(e.dataset.number);n<=o||(o=ae(e),e=e.querySelector(".tasks__status"),t.textContent="".concat(o," / ").concat(n),oe(t),re(e))},oe=function(e){setTimeout(function(){e.classList.add("hidden")},300)},re=function(e){var t=e.querySelector("i");setTimeout(function(){t.classList.add("visible")},600)},ae=function(e){var t=e.dataset.number;return e.dataset.number=++t},se="#j5e_dk1",ie="123g45Z6789!",ce=function(e){(h.value!==se||S.value!==ie?(b.textContent="Wrong username or password",O):(b.textContent="",C))(e)},O=function(e){e.classList.add("error")},C=function(e){e.classList.remove("error")},T=!1,ue=function(){q.classList.add("active"),L.classList.remove("active"),null===A()&&fe(),I({usernameBasic:h.value,loggedIn:!0}),setTimeout(function(){q.classList.remove("active"),r.classList.add("logged-in"),v.classList.remove("visible"),le(),j(),D(),P(),E(),h.value="",S.value=""},e)},le=function(){[document.querySelector(".progress-ring__progress"),document.querySelector(".progress-ring__progress-bg")].forEach(function(e){e.style.strokeWidth=0,e.style.strokeDashoffset=c}),s.innerHTML=""},de=function(){for(var e=document.querySelector(".notifications-box__body"),t=[],n=0;n<a.length;n++){var o=Math.floor(Math.random()*a.length);if(0!==o?setTimeout(function(){d.classList.add("visible")},300):d.classList.remove("visible"),t.includes(o))return;t.push(o);var r=document.createElement("div");r.classList.add("notifications-box__notification"),r.innerHTML='<div class="notifications-box__head">\n                            <span class="notifications-box__header">'.concat(a[o].message,'</span>\n                            <span class="notifications-box__time">').concat(a[o].time,'</span>\n                        </div>\n                        <p class="notifications-box__author">').concat(a[o].from,"</p>"),e.append(r)}},j=function(){var e=[document.querySelector(".progress-ring__progress"),document.querySelector(".progress-ring__progress-bg")],t=(parseFloat(document.querySelector(".progress-ring tspan:first-of-type").textContent.replace(",",".").slice(1,-1))/parseFloat(document.querySelector(".progress-ring tspan:last-of-type").textContent.replace(",",".").slice(3,-1))).toFixed(5),n=Math.floor(c*(1-t));setTimeout(function(){e.forEach(function(e){e.style.strokeDashoffset=n,e.style.strokeWidth=6})},100)},D=function(){for(var a=0;a<i.length;a++)(()=>{var e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("span"),o=document.createElement("div"),r=(e.classList.add("statistics__box"),n.classList.add("statistics__month"),t.classList.add("statistics__column"),o.classList.add("statistics__tooltip"),Math.floor(80*Math.random()+20));o.textContent="Total revenue: $".concat(r,"00"),o.style.opacity=0,n.textContent=i[a],e.append(t),e.append(o),setTimeout(function(){t.style.height=r+"px"},100),e.append(n),s.append(e),me(t,o)})();de()},me=function(e,n){e.addEventListener("mouseover",function(e){var t=Math.floor(20*Math.random());n.style.top=t-e.clientY/10+"px",n.style.left=t-e.clientX/10+"px",n.style.opacity=1}),e.addEventListener("mouseleave",function(){n.style.opacity=0})},P=function(){var e=document.querySelector(".aside"),t=e.querySelector(".aside__user-name"),e=e.querySelector(".aside__user-location"),n=p.querySelector(".id"),o=A();t.textContent=o.username||o.usernameBasic,n.textContent=o.username||o.usernameBasic,location&&(e.textContent=o.location)},fe=function(){localStorage.setItem("userData",JSON.stringify({}))},A=function(){var e=localStorage.getItem("userData");return e?JSON.parse(e):null},I=function(e){e=_objectSpread(_objectSpread({},A()),e);return localStorage.setItem("userData",JSON.stringify(e)),e};v.classList.add("visible"),(w=A())&&null!==(w=w.loggedIn)&&w&&(r.classList.add("logged-in"),q.classList.remove("active"),v.classList.remove("visible"),j(),D(),ee(),E()),p.addEventListener("click",function(e){e.preventDefault(),null!==r&&e.target.matches(".user-panel__link")&&(n(p),e.target.matches(".user-panel__link--logout"))&&V()}),window.addEventListener("click",function(e){!m.contains(e.target)&&e.target!==R&&m.classList.contains("active")&&n(u)}),window.addEventListener("click",function(e){e.target!==f[0]&&e.target!==y&&(y.value="",f.forEach(function(e){return e.classList.remove("btn-moved")}),y.classList.remove("active"))}),window.addEventListener("click",function(e){e.target===l||l.contains(e.target)||e.target.matches(".header__btn--tasks")||!l.classList.contains("active")||n(l)}),window.addEventListener("click",function(e){p.contains(e.target)||e.target.matches(".header__btn--user")||!p.classList.contains("active")||n(p)}),H.addEventListener("click",function(){n(u)}),B.addEventListener("click",function(e){var t;e.target.matches(".header__btn--bell")?N():e.target.matches(".header__btn--search-engine")?J():e.target.matches(".header__btn--user")?F():e.target.matches(".header__pro-subscribtion-btn")?(t=(t=e.target).dataset.name,t=l.querySelector('[data-name="'.concat(t,'"]')),te(t)):e.target.matches(".header__btn--tasks")&&M()}),o.forEach(function(e){return e.addEventListener("click",t)}),K.addEventListener("click",k),_.addEventListener("click",k),_.addEventListener("click",function(e){e.preventDefault(),G(),Q()}),W.addEventListener("click",function(e){e.preventDefault(),L.classList.toggle("active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
